//
// Get expressions
//
// @param {List} $values
// @param {Number} $breakpoints
// @param {List} $pool
// @param {List} $curr
// @return {List}
//
@function get-expressions($values, $breakpoints, $pool: (), $curr: ()) {
  @if $breakpoints == 0 {
    $pool: append($pool, $curr);
  } @elseif $breakpoints > 0 {
    @for $i from 1 through length($values) {
      @if $i > 1 {
        @debug nth($values, $i);
        @debug nth($values, $i - 1);
      }
      $pool: get-expressions($values, $breakpoints - 1, $pool, append($curr, nth($values, $i)));
    }
  }
  @return $pool;
}

//
// Replace `$search` with `$replace` in `$string`
//
// @author Hugo Giraudel
// @param {String} $string - Initial string
// @param {String} $search - Substring to replace
// @param {String} $replace ("") - New value
// @return {String} - Updated string
//
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}
